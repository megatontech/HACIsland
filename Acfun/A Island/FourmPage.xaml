<Page
    x:Name="pageRoot"
    x:Class="A_Island.ForumPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:A_Island"
    xmlns:common="using:A_Island.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    
    <Page.Resources>
        <DataTemplate x:Key="DataTemplate">
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border Grid.Column="0" Grid.Row="0" Background="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Width="125" Height="100">
                    <Image Source="{Binding ThImage}" Stretch="UniformToFill" Tapped="Image_Tapped" />
                </Border>
                <Grid Grid.Column="1" Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" FontFamily="Microsoft YaHei" Style="{StaticResource SubtitleTextBlockStyle}" Margin="5" >
                                <Run Text="No." />
                                <Run Text="{Binding ID}" />
                    </TextBlock>
                    <TextBlock Grid.Row="1" FontFamily="Microsoft YaHei" Style="{StaticResource SubtitleTextBlockStyle}" Margin="5" >
                        <Run Text="{Binding Title}" />
                        <Run Text="    " FontFamily="Global User Interface" />
                        <Run Text="{Binding Name}" />
                    </TextBlock>
                    <TextBlock Grid.Row="2" FontFamily="Microsoft YaHei" Style="{StaticResource SubtitleTextBlockStyle}" Margin="5" >
                        <Run Text="回复数：" />
                        <Run Text="{Binding ReplyCount}" />
                    </TextBlock>
                    <TextBlock Grid.Row="3" FontFamily="Microsoft YaHei" Style="{StaticResource SubtitleTextBlockStyle}" Margin="5" >
                        <Run Text="ID: " Foreground="Black"/>
                        <Run Text="{Binding UID_Special}" Foreground="Red" />
                        <Run Text="{Binding UID}" Foreground="Black" />
                    </TextBlock>
                    <TextBlock Grid.Row="4" Text="{Binding CreatedAt}" FontFamily="Microsoft YaHei" Style="{StaticResource SubtitleTextBlockStyle}" Margin="5" />
                </Grid>
                <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" FontFamily="Microsoft YaHei" Style="{StaticResource BodyTextBlockStyle}" Margin="5">
					<Run Text="{Binding Content_Head}" Foreground="#FF789922"/>
					<Run Text="{Binding Content}" Foreground="Black"/>
                </TextBlock>
            </Grid>
        </DataTemplate>
        <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border x:Name="OuterContainer">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <!--鼠标移到listview的item的效果 -->
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#56C5FF"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <!--选中框的颜色效果，这里我将value修改成了Red-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#1FAEFF"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <!--选中框右边三角的颜色，这里我将value修改成了Red-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#1FAEFF"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation TargetName="ContentContainer"/>
                                        </Storyboard>
                                    </VisualState>
                                    <!--鼠标按下时listview中item的效果-->
                                    <VisualState x:Name="PointerOverPressed">
                                        <Storyboard>
                                            <PointerDownThemeAnimation TargetName="ContentContainer"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectionBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#56C5FF"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <!--选中框的颜色效果，这里我将value改成了Red-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SelectedBorder">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#1FAEFF"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <!--选中框右边三角的颜色，这里我将value改成了Red-->
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SelectedEarmark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#1FAEFF"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="{StaticResource ListViewItemDisabledThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused"/>
                                    <VisualState x:Name="PointerFocused"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionHintStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.65" To="NoSelectionHint"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="VerticalSelectionHint">
                                        <Storyboard>
                                            <SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectionBackground" ToVerticalOffset="15"/>
                                            <SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="ContentBorder" ToVerticalOffset="15"/>
                                            <SwipeHintThemeAnimation ToHorizontalOffset="0" TargetName="SelectedCheckMark" ToVerticalOffset="15"/>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="HorizontalSelectionHint">
                                        <Storyboard>
                                            <SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectionBackground" ToVerticalOffset="0"/>
                                            <SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="ContentBorder" ToVerticalOffset="0"/>
                                            <SwipeHintThemeAnimation ToHorizontalOffset="-23" TargetName="SelectedCheckMark" ToVerticalOffset="0"/>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:0.500" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyph">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.5"/>
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.500" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="NoSelectionHint"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="UnselectedSwiping">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selecting">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectingGlyph"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedSwiping">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselecting">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HintGlyphBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedCheckMark"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DragStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NotDragging"/>
                                    <VisualState x:Name="Dragging">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InnerDragContent"/>
                                            <DragItemThemeAnimation TargetName="InnerDragContent"/>
                                            <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
                                            <FadeOutThemeAnimation TargetName="SelectedBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DraggingTarget">
                                        <Storyboard>
                                            <DropTargetItemThemeAnimation TargetName="OuterContainer"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleDraggingPrimary">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayBackground"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MultiArrangeOverlayText"/>
                                            <DoubleAnimation Duration="0" To="{StaticResource ListViewItemDragThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentBorder"/>
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground"/>
                                            <FadeInThemeAnimation TargetName="MultiArrangeOverlayText"/>
                                            <DragItemThemeAnimation TargetName="ContentBorder"/>
                                            <FadeOutThemeAnimation TargetName="SelectionBackground"/>
                                            <FadeOutThemeAnimation TargetName="SelectedCheckMarkOuter"/>
                                            <FadeOutThemeAnimation TargetName="SelectedBorder"/>
                                            <FadeOutThemeAnimation TargetName="PointerOverBorder"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleDraggingSecondary">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ContentContainer"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ReorderHintStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="NoReorderHint"/>
                                    <VisualState x:Name="BottomReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Bottom" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="TopReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Top" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="RightReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Right" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LeftReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation Direction="Left" ToOffset="{StaticResource ListViewItemReorderHintThemeOffset}" TargetName="ReorderHintContent"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DataVirtualizationStates">
                                    <VisualState x:Name="DataAvailable"/>
                                    <VisualState x:Name="DataPlaceholder">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderTextBlock">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PlaceholderRect">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <!--选中等效果设置，这边是重点，认真看代码，其实你就会发现，下面即是每个Item的组成部分-->
                            <Grid x:Name="ReorderHintContent" Background="Transparent">
                                <Path x:Name="SelectingGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="#56C5FF" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,0,0,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
                                <Border x:Name="ContentContainer">
                                    <Grid x:Name="InnerDragContent">
                                        <Border x:Name="HintGlyphBorder" HorizontalAlignment="Right" Height="40" Margin="4" Opacity="0" VerticalAlignment="Top" Width="40">
                                            <Path x:Name="HintGlyph" Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="#56C5FF" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,0,0,0" Opacity="0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
                                        </Border>
                                        <Rectangle x:Name="PointerOverBorder" Fill="#1FAEFF" IsHitTestVisible="False" Margin="1" Opacity="0"/>
                                        <Rectangle x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" Stroke="#1FAEFF" StrokeThickness="2"/>
                                        <!--选中鼠标离开后listview的item蒙板的颜色，这里将Fill修改成了Red-->
                                        <Rectangle x:Name="SelectionBackground" Fill="#56C5FF" Margin="4" Opacity="0"/>
                                        <Border x:Name="ContentBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="5">
                                            <Grid>
                                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                <TextBlock x:Name="PlaceholderTextBlock" Foreground="{x:Null}" IsHitTestVisible="False" Margin="{TemplateBinding Padding}" Opacity="0" Text="Xg"/>
                                                <Rectangle x:Name="PlaceholderRect" Fill="#56C5FF" IsHitTestVisible="False" Visibility="Collapsed"/>
                                                <!--listview的item选中框颜色，这里将stroke修改成了Red-->
                                                <Rectangle x:Name="SelectedBorder" IsHitTestVisible="False" Opacity="0" Stroke="#1FAEFF" StrokeThickness="{StaticResource ListViewItemSelectedBorderThemeThickness}"/>
                                                <Rectangle x:Name="MultiArrangeOverlayBackground" Fill="#56C5FF" IsHitTestVisible="False" Opacity="0"/>
                                            </Grid>
                                        </Border>
                                        <Border x:Name="SelectedCheckMarkOuter" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="4" Padding="{TemplateBinding BorderThickness}" VerticalAlignment="Top">
                                            <Grid x:Name="SelectedCheckMark" Height="40" Opacity="0" Width="40" >
                                                <!--listview的item选中效果中右边三角型颜色，这里将Fill修改成了Red-->
                                                <Path x:Name="SelectedEarmark" Data="M0,0 L40,0 L40,40 z" Fill="#1FAEFF" Stretch="Fill"/>
                                                <!--listview的item选中效果中勾的颜色-->
                                                <Path Data="F1 M133.1,17.9 L137.2,13.2 L144.6,19.6 L156.4,5.8 L161.2,9.9 L145.6,28.4 z" Fill="{StaticResource ListViewItemCheckThemeBrush}" FlowDirection="LeftToRight" HorizontalAlignment="Right" Height="13" Margin="0,5.5,5.5,0" Stretch="Fill" VerticalAlignment="Top" Width="15"/>
                                            </Grid>
                                        </Border>
                                        <TextBlock x:Name="MultiArrangeOverlayText" Foreground="{StaticResource ListViewItemDragForegroundThemeBrush}" FontSize="26.667" FontFamily="{StaticResource ContentControlThemeFontFamily}" IsHitTestVisible="False" Margin="18,9,0,0" Opacity="0" TextWrapping="Wrap" Text="{Binding TemplateSettings.DragItemsCount, RelativeSource={RelativeSource Mode=TemplatedParent}}" TextTrimming="WordEllipsis"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <!--
        此网格用作定义以下两行的页的根面板: 
        * 第 0 行包含后退按钮和页标题
        * 第 1 行包含页布局的其余部分
    -->
    <Grid x:Name="panel" Background="#FFFFFF">
        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="primaryColumn" Width="500"/>
            <ColumnDefinition x:Name="secondaryColumn" Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- 后退按钮和页标题-->
        <Grid x:Name="titlePanel">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Margin="24,0,24,0" Command="{Binding NavigationHelper.GoBackCommand, ElementName=pageRoot}"
                        Style="{StaticResource NavigationBackButtonNormalStyle}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        AutomationProperties.Name="Back"
                        AutomationProperties.AutomationId="BackButton"
                        AutomationProperties.ItemType="Navigation Button"/>
            <ComboBox x:Name="pageTitle"
                      Grid.Column="1"
                      Width="250"
                      FontFamily="Microsoft YaHei"
                      FontSize="20"
                      VerticalAlignment="Center" >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <TextBlock Text="{Binding Name}" />
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <ListView Height="100" Width="100"/>
            </ComboBox>
        </Grid>

        <!-- 垂直滚动项列表-->
        <ListView
            x:Name="itemListView"
            AutomationProperties.AutomationId="ItemsListView"
            AutomationProperties.Name="Items"
            TabIndex="1"
            Grid.Row="1"
            IsItemClickEnabled="True"
            ItemClick="itemListView_ItemClick" ItemTemplate="{StaticResource DataTemplate}" ItemContainerStyle="{StaticResource ListViewItemStyle}" />

        <Image x:Name="imgCover" Margin="5" Source="http://wiki.acfun.tv/keyheaders/cover.php" Grid.Column="1" Grid.RowSpan="2"/>
        <Grid x:Name="options" Grid.Column ="1" Grid.Row="0" Margin="5" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="140" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <Style TargetType="Button">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="FontFamily" Value="Segoe UI Symbol" />
                    <Setter Property="FontSize" Value="30" />
                </Style>
            </Grid.Resources>
            <Button x:Name="refreshButton" Grid.Column="0" Content="&#xE117;" Click="refreshButton_Click"/>
            <Button x:Name="postButton" Grid.Column="1" Content="&#xE1C2;" Click="postButton_Click"/>
            <Button x:Name="replyButton" Grid.Column="2" Content="&#xE120;" Click="replyButton_Click"/>
            <Button x:Name="favButton" Grid.Column="3" Content="&#xE1CE;" Click="favButton_Click"/>

        </Grid>
        <!-- 选定项的详细信息-->
        <ListView
            x:Name="itemDetail"
            AutomationProperties.AutomationId="ItemDetail"
            Visibility="Collapsed"
            Grid.Column="1"
            Grid.Row="1" 
            SelectionChanged="itemDetail_SelectionChanged"
            ItemContainerStyle="{StaticResource ListViewItemStyle}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="0" Background="{StaticResource ListViewItemOverlayForegroundThemeBrush}" Width="125" Height="100">
                            <Image Source="{Binding ThImage}" Stretch="UniformToFill" Tapped="Image_Tapped" />
                        </Border>
                        <Grid Grid.Column="1" Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" FontFamily="Microsoft YaHei" Style="{StaticResource SubtitleTextBlockStyle}" Margin="5" >
                                <Run Text="No." />
                                <Run Text="{Binding ID}" />
                            </TextBlock>
                            <TextBlock Grid.Row="1" Text="{Binding Title}"  FontFamily="Microsoft YaHei" Style="{StaticResource SubtitleTextBlockStyle}" Margin="5" />
                            <TextBlock Grid.Row="2" Text="{Binding Name}" FontFamily="Microsoft YaHei" Style="{StaticResource SubtitleTextBlockStyle}" Margin="5" />
                            <TextBlock Grid.Row="3" FontFamily="Microsoft YaHei" Style="{StaticResource SubtitleTextBlockStyle}" Margin="5" >
                                <Run Text="ID: " Foreground="Black"/>
                                <Run Text="{Binding UID_Special}" Foreground="Red"/>
                                <Run Text="{Binding UID}" Foreground="Black" />
                            </TextBlock>
                            <TextBlock Grid.Row="4" Text="{Binding CreatedAt}" FontFamily="Microsoft YaHei" Style="{StaticResource SubtitleTextBlockStyle}" Margin="5" />
                        </Grid>
                        <TextBlock Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" FontFamily="Microsoft YaHei" Style="{StaticResource BodyTextBlockStyle}" Margin="5">
					<Run Text="{Binding Content_Head}" Foreground="#FF789922"/>
					<Run Text="{Binding Content}" Foreground="Black"/>
                        </TextBlock>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <Popup x:Name="commentPopup" Grid.ColumnSpan="2" Grid.RowSpan="2" IsOpen="False">
            <Popup.ChildTransitions>
                <TransitionCollection>
                    <PopupThemeTransition/>
                </TransitionCollection>
            </Popup.ChildTransitions>
            <Grid Background="{ThemeResource ThumbBackgroundThemeBrush}" ScrollViewer.VerticalScrollBarVisibility="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.Resources>
                        <Style TargetType="Button">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="FontFamily" Value="Segoe UI Symbol" />
                            <Setter Property="FontSize" Value="26.6667" />
                        </Style>
                    </Grid.Resources>
                    <Button x:Name="cancleButton" Grid.Column="0" Content="&#xE106;" Click="cancleButton_Click"/>
                    <Button x:Name="sendButton" Grid.Column="1" Content="&#xE120;" Click="sendButton_Click"/>
                    <Button x:Name="saveButton" Grid.Column="2" Content="&#xE28F;" Click="saveButton_Click"/>
                </Grid>
                <TextBlock Grid.Row="1" Grid.Column="0" Margin="10" TextWrapping="Wrap" Text="名称" TextAlignment="Center" Style="{StaticResource SubheaderTextBlockStyle}" FontFamily="Microsoft YaHei"/>
                <TextBox x:Name="commentName" Grid.Row="1" Grid.Column="1" Margin="10" TextWrapping="Wrap" TextAlignment="Left" PlaceholderText="名称(可选)" FontFamily="Microsoft YaHei" FontSize="26.667"/>
                <TextBlock Grid.Row="2" Grid.Column="0" Margin="10" TextWrapping="Wrap" Text="E-mail" TextAlignment="Center" Style="{StaticResource SubheaderTextBlockStyle}" FontFamily="Microsoft YaHei"/>
                <TextBox x:Name="commentEmail" Grid.Row="2" Grid.Column="1" Margin="10" TextWrapping="Wrap" TextAlignment="Left" FontFamily="Microsoft YaHei" PlaceholderText="E-mail(可选)" FontSize="26.667"/>
                <TextBlock Grid.Row="3" Grid.Column="0" Margin="10" TextWrapping="Wrap" TextAlignment="Center" Style="{StaticResource SubheaderTextBlockStyle}" FontFamily="Microsoft YaHei" Text="题名"/>
                <TextBox x:Name="commentTitle" Grid.Row="3" Grid.Column="1" Margin="10" TextWrapping="Wrap" TextAlignment="Left" FontFamily="Microsoft YaHei" PlaceholderText="题名(可选)" FontSize="26.667"/>
                <Button Grid.Row="5" Grid.Column="0" Content="选择图片" Margin="10" FontFamily="Microsoft YaHei" FontSize="26.667" Click="Button_Click"/>
                <TextBlock x:Name="commentImageName" Grid.Row="5" Grid.Column="1" TextAlignment="Left" Margin="10" TextWrapping="Wrap" Text="未选择文件" Style="{StaticResource SubheaderTextBlockStyle}" FontFamily="Microsoft YaHei"/>
                <ComboBox Grid.Row="4" Grid.ColumnSpan="2" Margin="10" Height="60" FontFamily="Microsoft YaHei" ToolTipService.ToolTip="" FontSize="26.667" PlaceholderText="颜文字" SelectionChanged="ComboBox_SelectionChanged">
                    <ComboBoxItem Content="无"/>
                    <ComboBoxItem Content="|∀ﾟ"/>
                    <ComboBoxItem Content="('ﾟДﾟ`)"/>
                    <ComboBoxItem Content="(;'Д`)"/>
                    <ComboBoxItem Content="(｀･ω･)"/>
                    <ComboBoxItem Content="(=ﾟωﾟ)="/>
                    <ComboBoxItem Content="| ω・')"/>
                    <ComboBoxItem Content="|-` )"/>
                    <ComboBoxItem Content="|д` )"/>
                    <ComboBoxItem Content="|ー` )"/>
                    <ComboBoxItem Content="|∀` )"/>
                    <ComboBoxItem Content="(つд⊂)"/>
                    <ComboBoxItem Content="(ﾟДﾟ≡ﾟДﾟ)"/>
                    <ComboBoxItem Content="(＾o＾)ﾉ"/>
                    <ComboBoxItem Content="(|||ﾟДﾟ)"/>
                    <ComboBoxItem Content="( ﾟ∀ﾟ)"/>
                    <ComboBoxItem Content="( '∀`)"/>
                    <ComboBoxItem Content="(*'∀`)"/>
                    <ComboBoxItem Content="(*ﾟ∇ﾟ)"/>
                    <ComboBoxItem Content="(*ﾟーﾟ)"/>
                    <ComboBoxItem Content="(　ﾟ 3ﾟ)"/>
                    <ComboBoxItem Content="( 'ー`)"/>
                    <ComboBoxItem Content="( ・_ゝ・)"/>
                    <ComboBoxItem Content="( '_ゝ`)"/>
                    <ComboBoxItem Content="(*'д`)"/>
                    <ComboBoxItem Content="(・ー・)"/>
                    <ComboBoxItem Content="(・∀・)"/>
                    <ComboBoxItem Content="(ゝ∀･)"/>
                    <ComboBoxItem Content="(〃∀〃)"/>
                    <ComboBoxItem Content="(*ﾟ∀ﾟ*)"/>
                    <ComboBoxItem Content="( ﾟ∀。)"/>
                    <ComboBoxItem Content="( `д')"/>
                    <ComboBoxItem Content="(`ε' )"/>
                    <ComboBoxItem Content="(`ヮ' )"/>
                    <ComboBoxItem Content="σ`∀')"/>
                    <ComboBoxItem Content=" ﾟ∀ﾟ)σ"/>
                    <ComboBoxItem Content="ﾟ ∀ﾟ)ノ"/>
                    <ComboBoxItem Content="(╬ﾟдﾟ)"/>
                    <ComboBoxItem Content="(|||ﾟдﾟ)"/>
                    <ComboBoxItem Content="( ﾟдﾟ)"/>
                    <ComboBoxItem Content="Σ( ﾟдﾟ)"/>
                    <ComboBoxItem Content="( ;ﾟдﾟ)"/>
                    <ComboBoxItem Content="( ;'д`)"/>
                    <ComboBoxItem Content="(　д ) ﾟ ﾟ"/>
                    <ComboBoxItem Content="( ☉д⊙)"/>
                    <ComboBoxItem Content="(((　ﾟдﾟ)))"/>
                    <ComboBoxItem Content="( ` ・')"/>
                    <ComboBoxItem Content="( 'д`)"/>
                    <ComboBoxItem Content="( -д-)"/>
                    <ComboBoxItem Content="･ﾟ( ﾉд`ﾟ)"/>
                    <ComboBoxItem Content="( TдT)"/>
                    <ComboBoxItem Content="(￣∇￣)"/>
                    <ComboBoxItem Content="(￣3￣)"/>
                    <ComboBoxItem Content="(￣ｰ￣)"/>
                    <ComboBoxItem Content="(￣ . ￣)"/>
                    <ComboBoxItem Content="(￣皿￣)"/>
                    <ComboBoxItem Content="(￣艸￣)"/>
                    <ComboBoxItem Content="(￣︿￣)"/>
                    <ComboBoxItem Content="(￣︶￣)"/>
                    <ComboBoxItem Content="ヾ('ωﾟ｀)"/>
                    <ComboBoxItem Content="(*'ω`*)"/>
                    <ComboBoxItem Content="(・ω・)"/>
                    <ComboBoxItem Content="( '・ω)"/>
                    <ComboBoxItem Content="(｀・ω)"/>
                    <ComboBoxItem Content="('・ω・`)"/>
                    <ComboBoxItem Content="(`・ω・')"/>
                    <ComboBoxItem Content="( `_っ')"/>
                    <ComboBoxItem Content="( `ー')"/>
                    <ComboBoxItem Content="( '_っ`)"/>
                    <ComboBoxItem Content="( 'ρ`)"/>
                    <ComboBoxItem Content="( ﾟωﾟ)"/>
                    <ComboBoxItem Content="(oﾟωﾟo)"/>
                    <ComboBoxItem Content="(　^ω^)"/>
                    <ComboBoxItem Content="(｡◕∀◕｡)"/>
                    <ComboBoxItem Content="/( ◕‿‿◕ )\\"/>
                    <ComboBoxItem Content="ヾ('ε`ヾ)"/>
                    <ComboBoxItem Content="(ノﾟ∀ﾟ)ノ"/>
                    <ComboBoxItem Content="(σﾟдﾟ)σ"/>
                    <ComboBoxItem Content="(σﾟ∀ﾟ)σ"/>
                    <ComboBoxItem Content="|дﾟ )"/>
                    <ComboBoxItem Content="┃電柱┃"/>
                    <ComboBoxItem Content="ﾟ(つд`ﾟ)"/>
                    <ComboBoxItem Content="ﾟÅﾟ )　"/>
                    <ComboBoxItem Content="⊂彡☆))д`)"/>
                    <ComboBoxItem Content="⊂彡☆))д')"/>
                    <ComboBoxItem Content="⊂彡☆))∀`)"/>
                    <ComboBoxItem Content="('∀((☆ミつ"/>
                </ComboBox>
                <TextBlock Grid.Row="6" Grid.ColumnSpan="2" TextAlignment="Center" Margin="10" TextWrapping="Wrap" Text="正文" Style="{StaticResource SubheaderTextBlockStyle}" FontFamily="Microsoft YaHei"/>
                <TextBox x:Name="commentContent" Grid.Row="7" Grid.ColumnSpan="2" Margin="10" TextWrapping="Wrap" FontFamily="Microsoft YaHei" PlaceholderText="正文" FontSize="26.667" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
            </Grid>
        </Popup>

        <Popup x:Name="imagePopup" Grid.ColumnSpan="2" Grid.RowSpan="2" IsLightDismissEnabled="True" IsOpen="False">
            <Popup.ChildTransitions>
                <TransitionCollection>
                    <PopupThemeTransition/>
                </TransitionCollection>
            </Popup.ChildTransitions>
            <Image x:Name="popupImage" HorizontalAlignment="Center" VerticalAlignment="Center" PointerWheelChanged="image_PointerWheelChanged" ManipulationDelta="image_ManipulationDelta"/>
        </Popup>

        <VisualStateManager.VisualStateGroups>

            <!-- 视觉状态反映应用程序的视图状态-->
            <VisualStateGroup x:Name="ViewStates">
                <VisualState x:Name="PrimaryView" />
                <VisualState x:Name="SinglePane">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="primaryColumn" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="*"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="secondaryColumn" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemDetail" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <!--
                    如果选择一个项并且仅显示一个窗格，则详细信息显示需要更多大量的更改:
                     * 隐藏主列表，并且该列包含在其中
                     * 将项详细信息下移一行，为标题留出空间
                     * 将标题移至详细信息的正上方
                     * 调整详细信息的填充
                 -->
                <VisualState x:Name="SinglePane_Detail">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="primaryColumn" Storyboard.TargetProperty="Width">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemDetail" Storyboard.TargetProperty="(Grid.Row)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemDetail" Storyboard.TargetProperty="(Grid.RowSpan)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="titlePanel" Storyboard.TargetProperty="(Grid.Column)">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="options"  Storyboard.TargetProperty="Margin">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="120,5,5,5" />
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
